# Use Apache Kafka native
quarkus.kafka.devservices.provider=kafka-native
quarkus.kafka.devservices.topic-partitions.weather-json=10
quarkus.kafka.devservices.topic-partitions.weather-avro=10
quarkus.kafka.devservices.topic-partitions.weather-proto=10

# Dev profile (%dev)

# Test profile (%rest)

# Prod profile (%prod)
%prod.mp.messaging.connector.smallrye-kafka.bootstrap.servers=broker:29092
%prod.mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://schema-registry:8080/apis/registry/v2
%prod.mp.messaging.connector.smallrye-kafka.schema.registry.url=http://schema-registry:8080/apis/registry/v2

# Auto detection of Kafka serializers and deserializers
quarkus.messaging.kafka.serializer-autodetection.enabled=true

# Json Schema Channels
mp.messaging.incoming.in-weather-json.topic=weather-json
mp.messaging.incoming.in-weather-json.connector=smallrye-kafka
mp.messaging.incoming.in-weather-json.group.id=quarkus-weather-json-consumer-group
mp.messaging.incoming.in-weather-json.value.deserializer=se.martin.weather.json.WeatherDeserializer

mp.messaging.outgoing.out-weather-json.connector=smallrye-kafka
mp.messaging.outgoing.out-weather-json.topic=weather-json
mp.messaging.outgoing.out-weather-json.value.serializer=se.martin.weather.json.WeatherSerializer
mp.messaging.outgoing.out-weather-json.apicurio.registry.artifact.schema.location=weather-schema.json
mp.messaging.outgoing.out-weather-json.apicurio.registry.auto-register=true

# Avro Schema Channels
mp.messaging.incoming.in-weather-avro.topic=weather-avro
mp.messaging.incoming.in-weather-avro.connector=smallrye-kafka
mp.messaging.incoming.in-weather-avro.group.id=quarkus-weather-avro-consumer-group
mp.messaging.incoming.in-weather-avro.value.deserializer=io.apicurio.registry.serde.avro.AvroKafkaDeserializer

mp.messaging.outgoing.out-weather-avro.connector=smallrye-kafka
mp.messaging.outgoing.out-weather-avro.topic=weather-avro
mp.messaging.outgoing.out-weather-avro.apicurio.registry.auto-register=true
mp.messaging.outgoing.out-weather-avro.value.serializer=io.apicurio.registry.serde.avro.AvroKafkaSerializer

# Protobuf Channels
mp.messaging.incoming.in-weather-proto.topic=weather-proto
mp.messaging.incoming.in-weather-proto.connector=smallrye-kafka
mp.messaging.incoming.in-weather-proto.group.id=quarkus-weather-proto-consumer-group
mp.messaging.incoming.in-weather-proto.value.deserializer=io.apicurio.registry.serde.protobuf.ProtobufKafkaDeserializer
mp.messaging.incoming.in-weather-proto.specific.protobuf.value.type=se.martin.weather.proto.WeatherReport
#%prod.mp.messaging.incoming.in-weather-proto.schema.registry.url=http://schema-registry:8080/apis/ccompat/v6

mp.messaging.outgoing.out-weather-proto.connector=smallrye-kafka
mp.messaging.outgoing.out-weather-proto.topic=weather-proto
mp.messaging.outgoing.out-weather-proto.value.serializer=io.apicurio.registry.serde.protobuf.ProtobufKafkaSerializer
mp.messaging.outgoing.out-weather-proto.apicurio.registry.auto-register=true
#%prod.mp.messaging.outgoing.out-weather-proto.schema.registry.url=http://schema-registry:8080/apis/ccompat/v6